<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <Itf Name="I_List" Id="{aa13a36e-deb0-4cc7-ad47-2909bad43043}">
    <Declaration><![CDATA[INTERFACE I_List EXTENDS I_Collection
]]></Declaration>
    <Method Name="Add_Back" Id="{ed143bbb-a010-415c-b896-c1b4f9bfb5c8}">
      <Declaration><![CDATA[// Adds an item to the end of the list
METHOD Add_Back : I_List
VAR_INPUT
	Item 	: ANY; // Value to store in list
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Add_Front" Id="{664ab60f-b8be-4733-a589-6dee5ae64014}">
      <Declaration><![CDATA[// Adds an item at the front of the list
METHOD Add_Front : I_List
VAR_INPUT
	Item 	: ANY; // Value to store in list
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR
]]></Declaration>
    </Method>
    <Method Name="Contains" Id="{cf53c342-94a5-487b-b286-a918a0a99ce0}">
      <Declaration><![CDATA[(* Checks if item is contained in list *)
METHOD Contains : BOOL
VAR_INPUT
	Item : ANY; // Item to find in list
END_VAR]]></Declaration>
    </Method>
    <Method Name="Find" Id="{d299378d-b2a7-4265-bf70-d7dd01d951e0}">
      <Declaration><![CDATA[// Find the location of an item in list.
METHOD Find : I_List
VAR_INPUT
	Item 	: ANY; // Item to find in list
END_VAR
VAR_OUTPUT
	nIndex	 : T_Capacity; //Location of item in list 
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Get" Id="{664ad81c-6ac8-46ad-a943-fffeb40b9c6c}">
      <Declaration><![CDATA[// Gets item from list at specified location without removing it
METHOD Get : I_List
VAR_INPUT
	Return_Item 	: ANY;  // Variable to store returned item
	nIndex 			: T_Capacity; // Location of item
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Get_First" Id="{4cb1060d-b9e2-4b14-a3c7-804318807997}">
      <Declaration><![CDATA[// Gets item at the front of the list 
METHOD Get_First : I_List
VAR_INPUT
	Return_Item 	: ANY; // Variable to store returned item
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Get_Last" Id="{3c47ac46-b24e-437a-9669-4bbc4b2155c8}">
      <Declaration><![CDATA[// Gets item at the back of the list 
METHOD Get_Last : I_List
VAR_INPUT
	Return_Item 	: ANY; // Variable to store returned item
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Get_Value_As_String" Id="{1130af23-8586-4715-9679-f50e3ccc03e4}">
      <Declaration><![CDATA[// Returns item as a string, if type to string conversion is supported
METHOD Get_Value_As_String : I_List
VAR_INPUT
	nIndex	: T_Capacity; // Location of item
END_VAR
VAR_OUTPUT
	sItem 	: T_MaxString; // Variable to store returned item
END_VAR]]></Declaration>
    </Method>
    <Method Name="Insert" Id="{cbcf31f5-347a-4d2c-b521-7eb94990393d}">
      <Declaration><![CDATA[// Adds new item to list at specified location, if index = 0, item will be added at the front, if index = count, item will be added at the back
METHOD Insert : I_List
VAR_INPUT
	Item 	: ANY;  // Item to store in list
	nIndex 	: T_Capacity; // Location of item
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR
]]></Declaration>
    </Method>
    <Method Name="Remove" Id="{6ff65572-77f1-4fb7-9cb4-79cdc67c419b}">
      <Declaration><![CDATA[// Removes item at the front of the list and returns nothing
METHOD Remove : I_List
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Remove_At" Id="{11d22d9c-9ced-4d86-a57d-74189bdd8700}">
      <Declaration><![CDATA[// Remove item at specified location and return nothing
METHOD Remove_At : I_List
VAR_INPUT
	nIndex : T_Capacity; // Location of item
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Remove_Last" Id="{cbb5c719-998d-46fc-9253-404c915c1f81}">
      <Declaration><![CDATA[// Removes item at the back of the list and returns nothing
METHOD Remove_Last : I_List
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Resize" Id="{2409a290-ac75-4670-a2c4-7e10f9d953d0}">
      <Declaration><![CDATA[// Manually resize list. If list becomes smaller, item on higher locations will be deleted.
METHOD Resize : I_List
VAR_INPUT
	nSize : T_Capacity; // New size of list.
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Reverse" Id="{75ab4cca-8981-4235-83e6-9698bd0b85c9}">
      <Declaration><![CDATA[// Reverses the order of items in the list
METHOD Reverse : I_List
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
    </Method>
    <Method Name="Set" Id="{129722a3-3739-4cf3-9e42-c7264b7f81e8}">
      <Declaration><![CDATA[// Adds new item to list in the specified location without resizing list
METHOD Set : I_List
VAR_INPUT
	Item 	: ANY; 	// Item to store in list
	nIndex 	: T_Capacity; // Location of item
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR
]]></Declaration>
    </Method>
  </Itf>
</TcPlcObject>