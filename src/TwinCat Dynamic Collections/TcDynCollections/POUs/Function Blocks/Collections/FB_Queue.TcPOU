<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_Queue" Id="{13eadc58-7a50-0405-154b-84e7d6eef744}" SpecialFunc="None">
    <Declaration><![CDATA[// A collection whose access/mutation of items is first-in, first-out.
{attribute 'enable_dynamic_creation'}
{attribute 'no_assign'}
{attribute 'no_explicit_call' := 'direct call for this function block is not allowed'}
FUNCTION_BLOCK FB_Queue IMPLEMENTS I_Queue//, I_Enumerable, I_Copyable
VAR
	fbList : FB_List := ();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="_Count" Id="{7e00419f-b87d-0ec7-2a1a-dbee141a0374}">
      <Declaration><![CDATA[// Number of items in the collection.
PROPERTY _Count : T_Capacity]]></Declaration>
      <Get Name="Get" Id="{97fed0bb-f355-0873-3883-9fe7a76d1e93}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Count := THIS^.fbList._Count;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="_Empty" Id="{a1c9ba5f-c9f2-0357-2453-b47922f76ff9}">
      <Declaration><![CDATA[// Checks if collection is empty.
PROPERTY _Empty : BOOL]]></Declaration>
      <Get Name="Get" Id="{39810a08-dd4c-0b71-0e08-fa5bd6f6f2d6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Empty := THIS^.fbList._Empty;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="_Error_Status" Id="{bd42d599-33bf-0aca-205b-394c9df46827}">
      <Declaration><![CDATA[// Error status of the collection.
PROPERTY _Error_Status : T_Error]]></Declaration>
      <Get Name="Get" Id="{583f977b-88dc-0201-01dc-8e7238fed313}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Error_Status := THIS^.fbList._Error_Status;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="_Values" Id="{b6ab9f18-8907-0c33-2dde-39824895bb65}">
      <Declaration><![CDATA[// Gets an immutable list of the items in the queue.
PROPERTY _Values : I_Immutable_List]]></Declaration>
      <Get Name="Get" Id="{4d116fd9-3db6-01a4-022a-858ceedab0b9}">
        <Declaration><![CDATA[VAR_INST
	fbImmutable_List : FB_Immutable_List := (ipList := THIS^.fbList);
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Values := fbImmutable_List;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Clear" Id="{f54dec3f-d022-0fd8-0198-8b74f6c05569}">
      <Declaration><![CDATA[// Empties/Clears/Deletes every item in the queue.
METHOD Clear : I_Queue
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Clear := THIS^;

THIS^.fbList.Clear();]]></ST>
      </Implementation>
    </Method>
    <Method Name="Dequeue" Id="{632cafbf-45e3-0b80-010f-82eb45df36a0}">
      <Declaration><![CDATA[// Removes item at the front the queue.
METHOD Dequeue : I_Queue
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Dequeue := THIS^;

THIS^.fbList.Remove_At(0, bSuccess => bSuccess);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Enqueue" Id="{1bbf37a9-730a-0c2b-0e44-e912b8799892}">
      <Declaration><![CDATA[// Adds item at the back of the queue.
METHOD Enqueue : I_Queue
VAR_INPUT
	Item : ANY; // Variable containg data to store on the queue.
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Enqueue := THIS^;

THIS^.fbList.Insert_Generic(THIS^.fbList._Count, Item, bSuccess => bSuccess);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Enqueue_At_Front" Id="{2b1bc775-8b54-0b0c-0503-f554d32ff1ff}">
      <Declaration><![CDATA[// Adds item at the front of the queue.
METHOD Enqueue_At_Front : I_Queue
VAR_INPUT
	Item : ANY; // Variable containg data to store on the queue.
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Enqueue_At_Front := THIS^;

THIS^.fbList.Insert_Generic(0, Item, bSuccess => bSuccess);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Enqueue_Generic" Id="{4559d35d-dddb-04f5-3555-24c6cdac1f65}">
      <Declaration><![CDATA[// Adds a generic item at the back of the queue.
METHOD Enqueue_Generic : I_Queue
VAR_INPUT
	Item : T_Generic; // Item to store.
	bAt_Front : BOOL; // Enqueues at front if set to TRUE.
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Enqueue_Generic := THIS^;

IF bAt_Front THEN
	THIS^.fbList.Insert_Generic(0, Item, bSuccess => bSuccess);
ELSE
	THIS^.fbList.Insert_Generic(THIS^.fbList._Count, Item, bSuccess => bSuccess);
	END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get" Id="{07b030e2-3e18-044e-3db2-e43824ea14ab}">
      <Declaration><![CDATA[// Gets the item at the front of the queue.
METHOD Get : I_Queue
VAR_INPUT
	Item : ANY; // Variable to store returned item value
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get := THIS^;

THIS^.fbList.Get(0, Item, bSuccess => bSuccess);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_Generic" Id="{48b8e096-b1d3-034e-1505-452ed5475c9f}">
      <Declaration><![CDATA[// Gets the item at the front of the queue as a generic.
METHOD Get_Generic : I_Queue
VAR_OUTPUT
	Item : T_Generic; // Variable to store returned item value
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get_Generic := THIS^;

THIS^.fbList.Get_Generic(0, Item => Item, bSuccess => bSuccess);]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reverse" Id="{2cafa4be-456d-064e-0a58-b0c3cd0ea39e}">
      <Declaration><![CDATA[// Reverses the order of the items in the queue.
METHOD Reverse : I_Queue
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Reverse := THIS^;

THIS^.fbList.Reverse(bSuccess => bSuccess);]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>