<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="FB_Immutable_Map" Id="{d3e2bba3-a292-0537-0b54-88799f7f3087}" SpecialFunc="None">
    <Declaration><![CDATA[// Collection that exposes only immutable methods and properties of a collection that implements I_Map.
{attribute 'enable_dynamic_creation'}
FUNCTION_BLOCK FB_Immutable_Map EXTENDS FB_Collection IMPLEMENTS I_Immutable_Set
VAR_INPUT
	ipMap : I_Map;
END_VAR
VAR
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF THIS^.ipMap = 0 THEN RETURN; END_IF
THIS^._Count := THIS^.ipMap._Count;]]></ST>
    </Implementation>
    <Property Name="_Count" Id="{974add15-0962-0243-21c7-cc18a1df32f7}">
      <Declaration><![CDATA[// Number of items in the collection.
PROPERTY _Count : T_Capacity]]></Declaration>
      <Get Name="Get" Id="{a471029a-784e-0566-1784-ae0ca58ba3b6}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF THIS^.ipMap = 0 THEN 
	_Error_Status := THIS^.Error := F_Error(TRUE, GVL_Errors.ERR_INVALID_INTERFACE, 'The interface ipMap is null.');
	RETURN; 
	END_IF
	
_Count := THIS^.Count := THIS^.ipMap._Count;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="_Empty" Id="{254c8366-b29d-09e5-1a0d-9aa17f6682b4}">
      <Declaration><![CDATA[// Checks if collection is empty.
PROPERTY _Empty : BOOL]]></Declaration>
      <Get Name="Get" Id="{0dfd3965-7adc-0f3b-224d-533e50c1e78d}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF THIS^.ipMap = 0 THEN 
	_Error_Status := THIS^.Error := F_Error(TRUE, GVL_Errors.ERR_INVALID_INTERFACE, 'The interface ipMap is null.');
	RETURN; 
	END_IF
	
_Empty := THIS^.ipMap._Empty;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Property Name="_Error_Status" Id="{fdffd1aa-8a36-0b85-1934-3bbe770dc5ca}">
      <Declaration><![CDATA[// Error status of the collection.
PROPERTY _Error_Status : T_Error]]></Declaration>
      <Get Name="Get" Id="{2a62febf-d0a7-0c15-0b95-4094d874cdef}">
        <Declaration><![CDATA[VAR
END_VAR
]]></Declaration>
        <Implementation>
          <ST><![CDATA[IF THIS^.ipMap = 0 THEN 
	_Error_Status := THIS^.Error := F_Error(TRUE, GVL_Errors.ERR_INVALID_INTERFACE, 'The interface ipMap is null.');
	RETURN; 
	END_IF
	
_Error_Status := THIS^.Error := THIS^.ipMap._Error_Status;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Contains" Id="{ec33076f-1eac-0341-06d3-22700213ebf5}">
      <Declaration><![CDATA[// Checks if key is contained in the map.
METHOD Contains : BOOL
VAR_INPUT
	Key : ANY; // Key to find.
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.ipMap = 0 THEN 
	_Error_Status := THIS^.Error := F_Error(TRUE, GVL_Errors.ERR_INVALID_INTERFACE, 'The interface ipMap is null.');
	RETURN; 
	END_IF

Contains := THIS^.ipMap.Contains(Key);
THIS^._Count := THIS^.ipMap._Count;
THIS^._Error_Status := THIS^.ipMap._Error_Status;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get" Id="{8d4adc78-9b54-000c-33ad-cc3f5d8c12de}">
      <Declaration><![CDATA[// Gets the value associated with the specified key without removing it from the map.
METHOD Get : I_Immutable_Map
VAR_INPUT
	Key : ANY; // Key used to identify stored value
	Value : ANY; // Variable to store requested data 
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get := THIS^;

IF THIS^.ipMap = 0 THEN 
	_Error_Status := THIS^.Error := F_Error(TRUE, GVL_Errors.ERR_INVALID_INTERFACE, 'The interface ipMap is null.');
	RETURN; 
	END_IF
	
THIS^.ipMap.Get(Key, Value, bSuccess => bSuccess);
THIS^._Count := THIS^.ipMap._Count;
THIS^._Error_Status := THIS^.ipMap._Error_Status;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_As_String" Id="{2bf148fe-73a5-0d68-3b17-b226a918596b}">
      <Declaration><![CDATA[// Returns value as a string, if type to string conversion is supported.
METHOD Get_As_String : I_Immutable_Map
VAR_INPUT
	Key : ANY; // Key used to identify stored value
	sValue : REFERENCE TO STRING; // Variable to store returned item.
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get_As_String := THIS^;

IF THIS^.ipMap = 0 THEN 
	_Error_Status := THIS^.Error := F_Error(TRUE, GVL_Errors.ERR_INVALID_INTERFACE, 'The interface ipMap is null.');
	RETURN; 
	END_IF

THIS^.ipMap.Get_As_String(Key, sValue, bSuccess => bSuccess);
THIS^._Count := THIS^.ipMap._Count;
THIS^._Error_Status := THIS^.ipMap._Error_Status;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_Keys" Id="{cab7282f-89ba-0d64-2824-8cdca1fcc713}">
      <Declaration><![CDATA[// Gets an immutable list of the keys.
METHOD Get_Keys : I_Immutable_List
VAR
	fbDefault_Immutable_List : FB_Immutable_List;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.ipMap = 0 THEN 
	Get_Values := fbDefault_Immutable_List;
	_Error_Status := THIS^.Error := F_Error(TRUE, GVL_Errors.ERR_INVALID_INTERFACE, 'The interface ipMap is null.');
	RETURN; 
	END_IF

Get_Values := THIS^.ipMap.Get_Values();
THIS^._Count := THIS^.ipMap._Count;
THIS^._Error_Status := THIS^.ipMap._Error_Status;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_Values" Id="{9c038bc9-09e8-09e9-3154-f3a01fee4387}">
      <Declaration><![CDATA[// Gets an immutable list of the values in the map.
METHOD Get_Values : I_Immutable_List
VAR
	fbDefault_Immutable_List : FB_Immutable_List;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF THIS^.ipMap = 0 THEN 
	Get_Values := fbDefault_Immutable_List;
	_Error_Status := THIS^.Error := F_Error(TRUE, GVL_Errors.ERR_INVALID_INTERFACE, 'The interface ipMap is null.');
	RETURN; 
	END_IF

Get_Values := THIS^.ipMap.Get_Values();
THIS^._Count := THIS^.ipMap._Count;
THIS^._Error_Status := THIS^.ipMap._Error_Status;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Immutable_Map">
      <LineId Id="37" Count="0" />
      <LineId Id="14" Count="0" />
    </LineIds>
    <LineIds Name="FB_Immutable_Map._Count.Get">
      <LineId Id="8" Count="2" />
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Immutable_Map._Empty.Get">
      <LineId Id="14" Count="4" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Immutable_Map._Error_Status.Get">
      <LineId Id="5" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Immutable_Map.Contains">
      <LineId Id="7" Count="5" />
      <LineId Id="17" Count="0" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_Immutable_Map.Get">
      <LineId Id="11" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="16" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="18" Count="1" />
      <LineId Id="21" Count="0" />
      <LineId Id="20" Count="0" />
    </LineIds>
    <LineIds Name="FB_Immutable_Map.Get_As_String">
      <LineId Id="11" Count="0" />
      <LineId Id="13" Count="1" />
      <LineId Id="16" Count="1" />
      <LineId Id="12" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="19" Count="0" />
    </LineIds>
    <LineIds Name="FB_Immutable_Map.Get_Keys">
      <LineId Id="9" Count="7" />
      <LineId Id="6" Count="0" />
    </LineIds>
    <LineIds Name="FB_Immutable_Map.Get_Values">
      <LineId Id="4" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="5" Count="4" />
      <LineId Id="14" Count="0" />
      <LineId Id="3" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>