<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="FB_Queue" Id="{404f93c1-6d14-494b-9ea3-ff1c8b0bcca2}" SpecialFunc="None">
    <Declaration><![CDATA[// A collection whose access/mutation of items is first-in, first-out.
{attribute 'enable_dynamic_creation'}
{attribute 'no_assign'}
{attribute 'no_explicit_call' := 'direct call for this function block is not allowed'}
FUNCTION_BLOCK FINAL FB_Queue EXTENDS FB_Collection IMPLEMENTS I_Queue//, I_Enumerable, I_Copyable
VAR
	fbList : FB_List := ();
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Property Name="_Values" Id="{e7f66325-8216-4f84-881f-1772d4d5dd66}">
      <Declaration><![CDATA[// Gets an immutable list of the items in the queue.
PROPERTY _Values : I_Immutable_List]]></Declaration>
      <Get Name="Get" Id="{5190e6b5-241a-4770-b710-8b1df688e223}">
        <Declaration><![CDATA[VAR_INST
	fbImmutable_List : FB_Immutable_List := (ipList := THIS^.fbList);
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[_Values := fbImmutable_List;]]></ST>
        </Implementation>
      </Get>
    </Property>
    <Method Name="Clear" Id="{33155c9e-41db-4d3c-aa92-a27ce2830c76}">
      <Declaration><![CDATA[// Empties/Clears/Deletes every item in the queue.
METHOD Clear : I_Queue
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Clear := THIS^;

THIS^.fbList.Clear();

THIS^._Error_Status :=  THIS^.fbList._Error_Status;
THIS^._Count := THIS^.fbList._Count;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Dequeue" Id="{c567f35c-877b-4c5d-aaeb-45869ef32eb6}">
      <Declaration><![CDATA[// Removes item at the front the queue.
METHOD Dequeue : I_Queue
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[Dequeue := THIS^;

THIS^.fbList.Remove_At(0, bSuccess => bSuccess);

THIS^._Error_Status := THIS^.fbList._Error_Status;
THIS^._Count := THIS^.fbList._Count;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Enqueue" Id="{4d728991-2328-4d3a-842a-37c576901d12}">
      <Declaration><![CDATA[// Adds item at the back of the queue.
METHOD Enqueue : I_Queue
VAR_INPUT
	Item : ANY; // Variable containg data to store on the queue.
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Enqueue := THIS^;

THIS^.fbList.Insert_Generic(THIS^.fbList._Count, Item, bSuccess => bSuccess);

THIS^._Error_Status :=  THIS^.fbList._Error_Status;
THIS^._Count := THIS^.fbList._Count;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Enqueue_At_Front" Id="{564f49a6-0287-4ca0-9604-5db8f6cef5cb}">
      <Declaration><![CDATA[// Adds item at the front of the queue.
METHOD Enqueue_At_Front : I_Queue
VAR_INPUT
	Item : ANY; // Variable containg data to store on the queue.
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Enqueue_At_Front := THIS^;

THIS^.fbList.Insert_Generic(0, Item, bSuccess => bSuccess);

THIS^._Error_Status :=  THIS^.fbList._Error_Status;
THIS^._Count := THIS^.fbList._Count;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Enqueue_Generic" Id="{c5db9198-9a67-44fd-8842-1a1730e0efd3}">
      <Declaration><![CDATA[// Adds a generic item at the back of the queue.
METHOD Enqueue_Generic : I_Queue
VAR_INPUT
	Item : T_Generic; // Item to store.
	bAt_Front : BOOL; // Enqueues at front if set to TRUE.
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Enqueue_Generic := THIS^;

IF bAt_Front THEN
	THIS^.fbList.Insert_Generic(0, Item, bSuccess => bSuccess);
ELSE
	THIS^.fbList.Insert_Generic(THIS^.fbList._Count, Item, bSuccess => bSuccess);
	END_IF
	
THIS^._Error_Status :=  THIS^.fbList._Error_Status;
THIS^._Count := THIS^.fbList._Count;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get" Id="{e8ff070e-3fd4-4ae4-a89a-fe873dc2e6cf}">
      <Declaration><![CDATA[// Gets the item at the front of the queue.
METHOD Get : I_Queue
VAR_INPUT
	Item : ANY; // Variable to store returned item value
END_VAR
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get := THIS^;

THIS^.fbList.Get(0, Item, bSuccess => bSuccess);

THIS^._Error_Status := THIS^.fbList._Error_Status;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Get_Generic" Id="{2c748d3b-3ad3-4940-bfcf-5d6851dcd9d1}">
      <Declaration><![CDATA[// Gets the item at the front of the queue as a generic.
METHOD Get_Generic : I_Queue
VAR_OUTPUT
	Item : T_Generic; // Variable to store returned item value
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Get_Generic := THIS^;

THIS^.fbList.Get_Generic(0, Item => Item, bSuccess => bSuccess);

THIS^._Error_Status := THIS^.fbList._Error_Status;]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reverse" Id="{14855aba-b61b-40ba-acba-df0a64bedbe8}">
      <Declaration><![CDATA[// Reverses the order of the items in the queue.
METHOD Reverse : I_Queue
VAR_OUTPUT
	bSuccess : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Reverse := THIS^;

THIS^.fbList.Reverse(bSuccess => bSuccess);

THIS^._Error_Status :=  THIS^.fbList._Error_Status;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_Queue">
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Queue._Values.Get">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_Queue.Clear">
      <LineId Id="5" Count="3" />
      <LineId Id="4" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Queue.Dequeue">
      <LineId Id="7" Count="0" />
      <LineId Id="9" Count="3" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="FB_Queue.Enqueue">
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="3" />
      <LineId Id="10" Count="0" />
    </LineIds>
    <LineIds Name="FB_Queue.Enqueue_At_Front">
      <LineId Id="12" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="10" Count="1" />
      <LineId Id="9" Count="0" />
    </LineIds>
    <LineIds Name="FB_Queue.Enqueue_Generic">
      <LineId Id="10" Count="0" />
      <LineId Id="12" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="15" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="19" Count="0" />
      <LineId Id="18" Count="0" />
    </LineIds>
    <LineIds Name="FB_Queue.Get">
      <LineId Id="10" Count="4" />
    </LineIds>
    <LineIds Name="FB_Queue.Get_Generic">
      <LineId Id="7" Count="0" />
      <LineId Id="9" Count="2" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="FB_Queue.Reverse">
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="10" Count="0" />
      <LineId Id="9" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>